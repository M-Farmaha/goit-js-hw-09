{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAaH,EAAOE,cAAc,kBAClCE,EAAYJ,EAAOE,cAAc,iBACjCG,EAAcL,EAAOE,cAAc,mBAIzC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,IARzBR,EAAOc,iBAAiB,UAaxB,SAAwBC,GACtBA,EAAEC,iBACF,IAAMC,EAAad,EAAWe,MACxBC,EAAOf,EAAUc,MACjBE,EAASf,EAAYa,MACvBG,EAAM,EACNC,EAAMC,OAAON,GAECO,YAAW,WAC3BlB,EAAce,EAAKC,GAChBG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAuCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAInDa,GAAO,EACPC,GAAOC,OAAOJ,GAEd,IAAMc,EAAaC,aAAY,WAC7B5B,EAAce,EAAKC,GAChBG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAI7Ca,GAAOD,GACTe,cAAcF,GAGhBZ,GAAO,EACPC,GAAOC,OAAOJ,E,GACbA,E,GACFF,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayInput = formEl.querySelector('[name=\"delay\"]');\nconst stepInput = formEl.querySelector('[name=\"step\"]');\nconst amountInput = formEl.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', onFormElSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n}\n\nfunction onFormElSubmit(e) {\n  e.preventDefault();\n  const firstDelay = delayInput.value;\n  const step = stepInput.value;\n  const amount = amountInput.value;\n  let pos = 1;\n  let del = Number(firstDelay);\n\n  const timeoutId = setTimeout(() => {\n    createPromise(pos, del)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    pos += 1;\n    del += Number(step);\n\n    const intervalId = setInterval(() => {\n      createPromise(pos, del)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n\n      if (pos == amount) {\n        clearInterval(intervalId);\n      }\n\n      pos += 1;\n      del += Number(step);\n    }, step);\n  }, firstDelay);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","Math","random","addEventListener","e","preventDefault","firstDelay","value","step","amount","pos","del","Number","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","intervalId","setInterval","clearInterval"],"version":3,"file":"03-promises.9cc1a7c3.js.map"}